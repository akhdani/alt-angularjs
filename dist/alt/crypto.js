alt.loader.crypto=function(){return"undefined"!=typeof alt.modules.crypto?alt.modules.crypto:(alt.modules.crypto=angular.module("alt-crypto",[]).factory("$crypto",["$log","$timeout","$rootScope",function(t,r,o){return{encrypt:function(t,r,o){var e=16==r.length,p=CryptoJS.enc[e?"Utf8":"Base64"].parse(r+""),n=CryptoJS.enc.Base64.parse(o+""),a=CryptoJS.AES.encrypt(t,p,e?{padding:CryptoJS.pad.Pkcs7,iv:n}:{mode:CryptoJS.mode.CBC,padding:CryptoJS.pad.Pkcs7,iv:n});return a.toString()},decrypt:function(t,r,o){var e="";try{var p=16==r.length,n=t+"",a=CryptoJS.enc[p?"Utf8":"Base64"].parse(r+""),c=CryptoJS.enc.Base64.parse(o+""),d=CryptoJS.AES.decrypt(n,a,p?{iv:c,padding:CryptoJS.pad.Pkcs7}:{iv:c,mode:CryptoJS.mode.CBC,padding:CryptoJS.pad.Pkcs7});if(e=p?CryptoJS.enc.Utf8.stringify(d):d?d.toString(CryptoJS.enc.Utf8):"",p){for(var y="",i=0;i<e.length;i++)"AA=="!=btoa(e[i])&&(y+=e[i]);e=y}}catch(l){throw new Error("Tidak dapat melakukan parsing response dari server")}return e}}}]).run(["$log","$timeout","$rootScope","$crypto",function(t,r,o,e){o.$crypto=e}]),void alt.module("alt-crypto",alt.modules.crypto))},"undefined"!=typeof define?define([],function(){alt.loader.crypto()}):alt.loader.crypto();